<div class="right-column">
  <h2 class="right-column-heading mt-2"><span class="">Comments</span></h2>

  <div class="comment-feed-cards">

    <div class="edit-tool-card">


      <% @comment = Comment.new %>
        <div class="mt-0 d-flex" id="learn">
          <p class="truncate mb-1 quote-display-text" id="quote-display">Comment on a quote</p>
          <%= link_to "#" do %>
          <span class="mr-2 highlight-btn"><i class="fas fa-highlighter"></i></span>
          <% end %>
        </div>


        <div> <!--- This has to change to quote_create_comment_index_path(@quote) (where quote is the selected text) (has to be changed in routes aswell) -->
            <%= text_field_tag :content, params[:content], class: "comment-input-field", placeholder: "Say something"  %>
        </div>
    </div>

    <button id="apibtn">Highlight</button>

    <div class='discussion-container'>
      <div class='comment-container'>
      <!-- This needs to be refactored  -->
        <% @comments = policy_scope(Comment).where(quote: @source.quotes) %>
        <% @comments.order(created_at: :desc).each do |comment| %>

         <div data-id= <%=%"#{comment.quote.id}"%> class="comment-card">
          <div class="">
            <%= link_to user_profile_overview_path(comment.user), class: "comment-card-link" do %>
              <div class="d-flex align-items-center ">
                <% if comment.user.photo.attached? %>
                  <%= cl_image_tag comment.user.photo.key, class: "comment-card-avatar" %>
                <% else %>
                  <%= cl_image_tag "b08hxPY_jhyrxg", class: "avatar-small" %>
                <% end %>
                <div class="ml-2 username">
                  <%= comment.user.username %>
                  <p class="action truncate w-100">"<%= comment.quote.content %>"</p>
                </div>
              </div>
            <% end %>
          </div>
          <%# <%= link_to source_path(comment), class: "comment-card-link" do  %>
          <div class="comment-source-title">
            <p class="source-title"><%= comment.content %></p>
          </div>
          <%# <% end %>
        </div>
        <% end %>
      </div>
    </div>
  </div>
</div>

<script>
    var commentField = document.getElementById('content')
    var highlightButton = document.getElementById('apibtn')

    highlightButton.addEventListener('click', e => {
      if (document.querySelector('.temporary-highlight')) {
        sendDataWithComment(fetchDataWithComment());
      } else {
        sendDataWithoutComment(fetchDataWithoutComment())
      }
    })

    // When you type into form and press Enter
    document.getElementById("content")
      .addEventListener("keyup", function(event) {
      event.preventDefault();
      if (event.keyCode === 13) {
        sendDataWithComment(fetchDataWithComment());
      }
    });

    function fetchDataWithComment() {
      const storedText = document.querySelector('.temporary-highlight').innerText
      const comment = commentField.value
      const sourceId = window.location.pathname.split("/").pop()
      return {
        user: '<%= current_user.id %>',
        content: storedText,
        source: sourceId,
        comment: comment
      }
    }

    function sendDataWithComment(data) {
      const url = 'http://localhost:3000/quotes';
      const params = {
        user: { user_id: data.user },
        quote: { content: data.content},
        source: { id: data.source },
        comment: { content: data.comment}
      }
      const options = {
        method: "POST",
        headers: { 'Content-Type': 'application/json', 'Accept': "application/json"},
        body: JSON.stringify(params)
      }
      fetch(url, options)
      .then(response => response.json())
      .then(data => console.log(data))
      location.reload()
    }

    function fetchDataWithoutComment() {
    const selectedText = window.getSelection().toString();
    const sourceId = window.location.pathname.split("/").pop()
    return {
      user: '<%= current_user.id %>',
      content: selectedText,
      source: sourceId
    }
  }

  function sendDataWithoutComment(data) {
    const url = 'http://localhost:3000/quotes';
    const params = {
      user: { user_id: data.user },
      quote: { content: data.content},
      source: { id: data.source }
    }
    const options = {
      method: "POST",
      headers: { 'Content-Type': "application/json", 'Accept': "application/json"},
      body: JSON.stringify(params)
    }
    fetch(url, options)
    .then(response => response.json())
    .then(data => console.log(data))
    location.reload()
  }

  </script>

